{"version":3,"sources":["components/Form.js","components/Recipes.js","App.js","components/loadingScreen/Loading.js","components/Recipe.js","components/Router.js","registerServiceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","onSubmit","getRecipe","style","marginBottom","className","type","name","Recipes","recipes","slice","count","map","recipe","key","title","LazyLoad_default","src","image_url","alt","length","concat","substring","publisher","Link","to","pathname","recipe_id","state","API_KEY","App","_callee","e","recipeName","api_call","data","regenerator_default","wrap","_context","prev","next","target","elements","value","preventDefault","fetch","_this","sent","json","console","log","setState","stop","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","stringify","setItem","handleChange","this","textDecoration","components_Form","defaultChecked","onChange","components_Recipes","Component","Loading","Recipe","activeRecipe","req","res","location","components_loadingScreen_Loading","href","publisher_url","rel","React","Router","HashRouter","Switch","Route","path","component","exact","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","components_Router","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.972061be.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = props => (\r\n    <form onSubmit={props.getRecipe} style={{ marginBottom:\"2rem\" }}>\r\n        <input className=\"form__input\" type=\"text\" name=\"recipeName\" />\r\n        <button className=\"form__button\">Search</button>\r\n    </form>\r\n);\r\n\r\nexport default Form;","import React from \"react\";\r\nimport LazyLoad from \"react-lazy-load\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Recipes = props => (\r\n  <div className=\"container\">\r\n    <div className=\"row\">\r\n      {props.recipes.slice(0, props.count).map(recipe => {\r\n        return (\r\n          <div\r\n            key={recipe.title}\r\n            className=\"col-md-4\"\r\n            style={{ marginBottom: \"2rem\" }}\r\n          >\r\n            <div className=\"recipes__box\">\r\n              <LazyLoad>\r\n                <img\r\n                  className=\"recipes__box-img\"\r\n                  src={recipe.image_url}\r\n                  alt={recipe.title}\r\n                />\r\n              </LazyLoad>\r\n\r\n              <div className=\"recipe__text\">\r\n                <h5 className=\"recipes__title\">\r\n                  {recipe.title.length < 20\r\n                    ? `${recipe.title}`\r\n                    : `${recipe.title.substring(0, 25)}...`}\r\n                </h5>\r\n                <p className=\"recipes__subtitle\">\r\n                  Publisher: <span>{recipe.publisher}</span>\r\n                </p>\r\n              </div>\r\n              <button className=\"recipe_buttons\">\r\n                <Link\r\n                  to={{\r\n                    pathname: `/recipe/${recipe.recipe_id}`,\r\n                    state: { recipe: recipe.title }\r\n                  }}\r\n                >\r\n                  View Recipe\r\n                </Link>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Recipes;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Form from \"./components/Form\";\r\nimport Recipes from \"./components/Recipes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst API_KEY = \"08ee1b4613c342c86f1bf5d398502cff\";\r\n\r\n//  \"2ba01c1d23194ea90f8e8addd404c6b2\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    recipes: [],\r\n    count: 5\r\n  };\r\n\r\n  getRecipe = async e => {\r\n    const recipeName = e.target.elements.recipeName.value;\r\n    e.preventDefault();\r\n    const api_call = await fetch(\r\n      `https://cors-anywhere.herokuapp.com/http://food2fork.com/api/search?key=${API_KEY}&q=${recipeName}&count=${\r\n      this.state.count\r\n      }`\r\n    );\r\n    const data = await api_call.json();\r\n    console.log(data);\r\n    this.setState({\r\n      recipes: data.recipes\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const json = localStorage.getItem(\"recipes\");\r\n    const recipes = JSON.parse(json);\r\n    this.setState({\r\n      recipes\r\n    });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    const recipes = JSON.stringify(this.state.recipes);\r\n    localStorage.setItem(\"recipes\", recipes);\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      count: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.recipes);\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                textDecoration: \"none\"\r\n              }}\r\n            >\r\n              Recipe Search{\" \"}\r\n            </Link>{\" \"}\r\n          </h1>{\" \"}\r\n        </header>{\" \"}\r\n        <Form getRecipe={this.getRecipe} />{\" \"}\r\n        <div\r\n          className=\"radioButtons\"\r\n          style={{\r\n            marginBottom: \"1rem\"\r\n          }}\r\n        >\r\n          <input\r\n            type=\"radio\"\r\n            value=\"5\"\r\n            defaultChecked\r\n            name=\"count\"\r\n            onChange={this.handleChange}\r\n          />\r\n          5{\" \"}\r\n          <input\r\n            type=\"radio\"\r\n            value=\"10\"\r\n            name=\"count\"\r\n            onChange={this.handleChange}\r\n          />\r\n          10{\" \"}\r\n          <input\r\n            type=\"radio\"\r\n            value=\"15\"\r\n            name=\"count\"\r\n            onChange={this.handleChange}\r\n          />\r\n          20{\" \"}\r\n          <input\r\n            type=\"radio\"\r\n            value=\"15\"\r\n            name=\"count\"\r\n            onChange={this.handleChange}\r\n          />\r\n          30{\" \"}\r\n        </div>{\" \"}\r\n        {localStorage.getItem(\"recipes\") && this.state.recipes.length !== 0 && (\r\n          <Recipes recipes={this.state.recipes} count={this.state.count} />\r\n        )}{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './Loading.css';\r\n\r\nconst Loading = () => (\r\n  <div className=\"sk-circle overflow-hidden\">\r\n  <div className=\"sk-circle1 sk-child\"></div>\r\n  <div className=\"sk-circle2 sk-child\"></div>\r\n  <div className=\"sk-circle3 sk-child\"></div>\r\n  <div className=\"sk-circle4 sk-child\"></div>\r\n  <div className=\"sk-circle5 sk-child\"></div>\r\n  <div className=\"sk-circle6 sk-child\"></div>\r\n  <div className=\"sk-circle7 sk-child\"></div>\r\n  <div className=\"sk-circle8 sk-child\"></div>\r\n  <div className=\"sk-circle9 sk-child\"></div>\r\n  <div className=\"sk-circle10 sk-child\"></div>\r\n  <div className=\"sk-circle11 sk-child\"></div>\r\n  <div className=\"sk-circle12 sk-child\"></div>\r\n</div>\r\n);\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from './loadingScreen/Loading';\r\n\r\n\r\nconst API_KEY = \"08ee1b4613c342c86f1bf5d398502cff\";\r\n\r\n//\"2ba01c1d23194ea90f8e8addd404c6b2\";\r\n\r\nclass Recipe extends React.Component {\r\n  state = {\r\n    activeRecipe: []\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const title = this.props.location.state.recipe;\r\n    const req = await fetch(`https://cors-anywhere.herokuapp.com/http://food2fork.com/api/search?key=${API_KEY}&q=${title}`);\r\n    const res = await req.json();\r\n    console.log(res);\r\n    this.setState({ activeRecipe: res.recipes[0] });\r\n  }\r\n\r\n  render() {\r\n    const recipe = this.state.activeRecipe;\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          {\r\n            this.state.activeRecipe.length === 0 && <Loading />\r\n          }\r\n\r\n          { this.state.activeRecipe.length !== 0 &&\r\n            <div className=\"active-recipe\">\r\n              <img className=\"active-recipe__img\" src={recipe.image_url} alt={recipe.title} />\r\n              <h3 className=\"active-recipe__title\">{ recipe.title }</h3>\r\n              <h4 className=\"active-recipe__title\">\r\n                Publisher: <span>{ recipe.publisher }</span>\r\n              </h4>\r\n              <p className=\"active-recipe__website\">\r\n                Website: <span><a href={recipe.publisher_url} target=\"_blank\" rel=\"noopener noreferrer\" >{recipe.publisher_url}</a></span>\r\n              </p>\r\n              <button className=\"active-recipe__button\">\r\n                <Link to=\"/\">Go Home</Link>\r\n              </button>\r\n            </div>            \r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Recipe;  ","import React from 'react';\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport App from \"../App\";\r\nimport Recipe from \"./Recipe\";\r\n\r\nconst Router = () => (\r\n  <HashRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={App} exact />\r\n      <Route path=\"/recipe/:id\" component={Recipe} />\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n\r\nexport default Router;\r\n","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Router from './components/Router';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<Router />, document.getElementById('root'));\r\nregisterServiceWorker();"],"sourceRoot":""}